{"version":3,"file":"hello-world.js","sources":["../../src/utils/getChildNodeText.ts","../../src/components/icon/icon.template.ts","../../src/utils/cleanUpBlock.ts","../../src/blocks/hello-world/hello-world.ts"],"sourcesContent":["/**\n * Retrieves the text content of a child node of the given element at the specified index.\n * @param {HTMLElement} element The parent element from which to retrieve the child node.\n * @param {number} index The index of the child node to retrieve.\n * @returns {string} The text content of the child node, trimmed of leading and trailing whitespace,\n * or an empty string if the child node or its text content is unavailable.\n */\nexport function getChildNodeText(element: HTMLElement, index: number): string {\n  const childNode = element.children[index];\n  return childNode.textContent?.trim() ?? '';\n}\n","import { html } from 'lit';\nimport { IconName } from 'Types/icons.types.ts';\n\nexport const renderIcon = (icon: IconName, cssClasses?: string) => {\n  return html`<icon-component\n    class=\"icon-component${cssClasses ? ` ${cssClasses}` : ''}\"\n    name=\"${icon}\"\n  ></icon-component>`;\n};\n","/**\n * Cleans up a block by removing its inner HTML content and resetting its display property.\n * @param {HTMLElement} block - The HTML element representing the block to clean up.\n * @returns {void}\n *\n * @remarks\n * This function is useful for resetting a block's state or content.\n */\nexport const cleanUpBlock = (block: HTMLElement): void => {\n  while (block.firstChild) {\n    block.removeChild(block.firstChild);\n  }\n\n  block.style.removeProperty('display');\n};\n","import { html, render, TemplateResult } from 'lit';\nimport { getChildNodeText } from 'Utils/getChildNodeText.ts';\n\n/**\n * These are the imported components for the block.\n * They need to be imported so that Vite will bundle them as chunks that can be loaded.\n * Otherwise, the component will not be loaded with the block.\n */\nimport 'Components/icon/icon.ts';\n\n/**\n * These are the imported styles for the block.\n * They need to be imported so that Vite will bundle them as chunks that can be loaded.\n * Otherwise, the styles would not be built into the dist directory.\n */\nimport './hello-world.scss';\nimport { renderIcon } from 'Components/icon/icon.template.ts';\nimport { cleanUpBlock } from 'Utils/cleanUpBlock.ts';\n\ninterface HelloWorldArgs {\n  message: string;\n}\n\n/**\n * The block rows enum is used to avoid magic numbers,\n * and makes it easier to change the index of your block argument in each row.\n * It mirrors the table/block structure you created in Google Docs.\n */\nenum blockRows {\n  message,\n}\n\n/**\n * The template function is used to generate the markup for your block and\n * respond to the arguments coming from your table/block.\n * @param {HelloWorldArgs}\n */\nconst template = ({ message }: HelloWorldArgs): TemplateResult => {\n  return html`<div class=\"container\">\n    <div class=\"hello-world\">\n      <h1>Hello, World!</h1>\n      <p>Welcome to your first EDS Block. ${renderIcon('rocket-lunch')}</p>\n      <p class=\"message\">This message comes from your block: ${message}</p>\n    </div>\n  </div>`;\n};\n\n/**\n * Each block has an exported default function. It receives the raw block\n * provided by EDS and is used to extract the arguments from it.\n * @param {HTMLImageElement} block The raw block element provided by EDS.\n */\nexport default function (block: HTMLImageElement) {\n  const args = {\n    // Gets the\n    message: getChildNodeText(block, blockRows.message),\n  };\n\n  // Removes the generative content of the eds block\n  cleanUpBlock(block);\n  render(template(args), block);\n}\n"],"names":["getChildNodeText","element","index","_a","renderIcon","icon","cssClasses","html","cleanUpBlock","block","template","message","helloWorld","args","render"],"mappings":"0DAOgB,SAAAA,EAAiBC,EAAsBC,EAAuB,OAErE,QAAAC,EADWF,EAAQ,SAASC,CAAK,EACvB,cAAV,YAAAC,EAAuB,SAAU,EAC1C,CCPa,MAAAC,EAAa,CAACC,EAAgBC,IAClCC,yCACkD,EAAE,WACjDF,CAAI,sBCEHG,EAAgBC,GAA6B,CACxD,KAAOA,EAAM,YACLA,EAAA,YAAYA,EAAM,UAAU,EAG9BA,EAAA,MAAM,eAAe,SAAS,CACtC,ECuBMC,EAAW,CAAC,CAAE,QAAAC,KACXJ,8GAGmCH,EAAW,cAAc,CAAC,8DACPO,CAAO,mBAUtE,SAAAC,EAAyBH,EAAyB,CAChD,MAAMI,EAAO,CAEX,QAASb,EAAiBS,EAAO,CAAiB,CAAA,EAIpDD,EAAaC,CAAK,EACXK,EAAAJ,EAASG,CAAI,EAAGJ,CAAK,CAC9B"}