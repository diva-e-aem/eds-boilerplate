{"version":3,"file":"iconnn.js","sources":["../../tools/sidekick/plugins/iconnn/iconnn.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport './iconnn.scss';\n// @ts-ignore import module\nimport { PLUGIN_EVENTS } from 'https://main--franklin-library-host--dylandepass.hlx.live/tools/sidekick/library/events/events.js';\n\ninterface IconItem {\n  icon: string;\n}\nfunction getFilteredIcons(data: IconItem[], query: string): IconItem[] {\n  if (!query) {\n    return data;\n  }\n  return data.filter((item) => item.icon.toLowerCase().includes(query.toLowerCase()));\n}\n\nconst iconExists = (iconName: string): Promise<boolean> => {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.src = `/public/icons/${iconName}.svg`;\n    img.onload = () => resolve(true);\n    img.onerror = () => resolve(false);\n  });\n};\nconst createMenuItems = async (data: IconItem[], query: string): Promise<string> => {\n  const filteredIcons = getFilteredIcons(data, query);\n  const itemsPromises = filteredIcons.map(async (item) => {\n    const iconExistsFlag = await iconExists(item.icon);\n    const iconPath = iconExistsFlag ? `/public/icons/${item.icon}.svg` : '';\n    return `\n      <div class=\"icons-item\">\n        ${iconPath ? `<img src=\"${iconPath}\" alt=\"${item.icon} icon\" class=\"icon-icon\" />` : ''}\n        <span class=\"icon-title\">${item.icon}</span>\n      </div>\n    `;\n  });\n\n  const items = await Promise.all(itemsPromises);\n  return items.join('');\n};\nexport async function decorate(container: HTMLElement, data: IconItem[], query: string): Promise<void> {\n  const menuItems = await createMenuItems(data, query);\n  const spContainer = document.createElement('div');\n  spContainer.classList.add('container-icon');\n  spContainer.innerHTML = menuItems;\n  container.append(spContainer);\n\n  document.dispatchEvent(\n    new CustomEvent(PLUGIN_EVENTS.TOAST, {\n      detail: { message: 'Icons loaded successfully!' },\n    })\n  );\n}\n\nexport default {\n  title: 'Iconnn',\n  searchEnabled: true,\n};\n"],"names":["getFilteredIcons","data","query","item","iconExists","iconName","resolve","img","createMenuItems","itemsPromises","iconPath","decorate","container","menuItems","spContainer","PLUGIN_EVENTS","iconnn"],"mappings":"kIAkBA,SAASA,EAAiBC,EAAkBC,EAA2B,CACrE,OAAKA,EAGED,EAAK,OAAQE,GAASA,EAAK,KAAK,YAAY,EAAE,SAASD,EAAM,YAAY,CAAC,CAAC,EAFzED,CAGX,CAEA,MAAMG,EAAcC,GACX,IAAI,QAASC,GAAY,CACxB,MAAAC,EAAM,IAAI,MACZA,EAAA,IAAM,iBAAiBF,CAAQ,OAC/BE,EAAA,OAAS,IAAMD,EAAQ,EAAI,EAC3BC,EAAA,QAAU,IAAMD,EAAQ,EAAK,CAAA,CAClC,EAEGE,EAAkB,MAAOP,EAAkBC,IAAmC,CAElF,MAAMO,EADgBT,EAAiBC,EAAMC,CAAK,EACd,IAAI,MAAOC,GAAS,CAEtD,MAAMO,EADiB,MAAMN,EAAWD,EAAK,IAAI,EACf,iBAAiBA,EAAK,IAAI,OAAS,GAC9D,MAAA;AAAA;AAAA,UAEDO,EAAW,aAAaA,CAAQ,UAAUP,EAAK,IAAI,8BAAgC,EAAE;AAAA,mCAC5DA,EAAK,IAAI;AAAA;AAAA,KAAA,CAGzC,EAGM,OADO,MAAM,QAAQ,IAAIM,CAAa,GAChC,KAAK,EAAE,CACtB,EACsB,eAAAE,EAASC,EAAwBX,EAAkBC,EAA8B,CACrG,MAAMW,EAAY,MAAML,EAAgBP,EAAMC,CAAK,EAC7CY,EAAc,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAU,IAAI,gBAAgB,EAC1CA,EAAY,UAAYD,EACxBD,EAAU,OAAOE,CAAW,EAEnB,SAAA,cACP,IAAI,YAAYC,EAAc,MAAO,CACnC,OAAQ,CAAE,QAAS,4BAA6B,CAAA,CACjD,CAAA,CAEL,CAEA,MAAeC,EAAA,CACb,MAAO,SACP,cAAe,EACjB"}