name: Build
on: [push]

jobs:
  install-and-cache-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --prefer-offline

  lint:
    runs-on: ubuntu-latest
    needs:
      - install-and-cache-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Lint project
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install-and-cache-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Run unit tests
        run: npm run test:ci

  build-and-commit-dist:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Build project
        run: npm run build

      - name: Setup git user
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "eds-boilerplate@diva-e.com"    

      - name: Add dist
        run: |
          pwd
          git add -f ./dist

      - name: Check if dist directory has changed
        id: check-dist-changes
        run: |          
          before_commit="${{ github.event.before }}"
          
          if git diff --quiet HEAD "$before_commit" -- ./dist; then
            echo "No changes detected in the dist directory."
          else
            echo "dist_changed=true" >> "$GITHUB_ENV"
          fi


      - name: Commit and push dist
        if: steps.check-dist-changes.outputs.dist_changed == 'true'
        run: |
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
